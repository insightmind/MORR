@startuml
'skinparam monochrome true
hide footbox
title Event flow from KeyboardModule to MPEGEncoder
actor User

participant ":KeyboardInteractEventProducer" as KeyboardEventProducer
User -> KeyboardEventProducer : <<performs keypress>>
activate KeyboardEventProducer
create "keypressEvent :KeyboardInteractEvent" as KeyboardEvent
KeyboardEventProducer -> KeyboardEvent : <<create>>
KeyboardEventProducer <-- KeyboardEvent
KeyboardEventProducer -> KeyboardEventProducer : enqueue(keypressEvent)
deactivate KeyboardEventProducer

participant ":MetadataCapture" as MetadataCapture
MetadataCapture -> KeyboardEventProducer : GetEvents()
activate MetadataCapture
activate KeyboardEventProducer
MetadataCapture <-- KeyboardEventProducer : <<keypressEvent>>
note right
This is an asynchronous stream
that returns events in a loop
as they are enqueued
end note
deactivate KeyboardEventProducer

create "metadataSample :MetadataSample" as MetadataSample
MetadataCapture -> MetadataSample : <<create>>
MetadataCapture <-- MetadataSample
deactivate MetadataCapture

participant ":RecordingManager" as RecordingManager
participant ":MPEGEncoder" as MPEGEncoder
activate MPEGEncoder
MPEGEncoder -> RecordingManager : <<MetadataSampleRequestedEvent>>
activate RecordingManager
RecordingManager -> MetadataCapture : NextSample()
activate MetadataCapture
RecordingManager <-- MetadataCapture : <<metadataSample>>
deactivate MetadataCapture
MPEGEncoder <-- RecordingManager : <<metadataSample>>
deactivate RecordingManager
MPEGEncoder -> MPEGEncoder : <<perform encoding>>

@enduml
