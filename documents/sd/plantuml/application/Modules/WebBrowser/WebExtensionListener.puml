@startuml
class WebExtensionListener {
    + WebExtensionListener(urlSuffix:string)
    + RecordingActive : bool <<get>> <<set>>
    + StartListening() : void
    + StopListening() : void
    + Subscribe(observer:IWebBrowserEventObserver, labels:EventLabel[]) : void
    + Unsubscribe(observer:IWebBrowserEventObserver, labels:EventLabel[]) : void
}
class WebBrowserRequest {
    + Request : string <<get>> <<set>>
    + Data : JsonElement? <<get>> <<set>>
}
class WebBrowserResponse {
    + WebBrowserResponse(response:string, config:string?)
    + application : string <<get>> = "MORR"
    + response : string <<get>>
    + config : string? <<get>>
}
enum WebBrowserRequestType {
    CONNECT,
    CONFIG,
    START,
    SENDDATA,
    WAITSTOP,
}
class ResponseStrings <<sealed>> {
    + {static} <<readonly>> POSITIVERESPONSE : string = "Ok"
    + {static} <<readonly>> NEGATIVERESPONSE : string = "Invalid Request"
    + {static} <<readonly>> STARTRESPONSE : string = "Start"
    + {static} <<readonly>> STOPRESPONSE : string = "Stop"
}
IWebBrowserEventObservable <|-- WebExtensionListener
WebExtensionListener +-- WebBrowserRequest
WebExtensionListener +-- WebBrowserResponse
WebExtensionListener +-- WebBrowserRequestType
WebExtensionListener +-- ResponseStrings
@enduml
