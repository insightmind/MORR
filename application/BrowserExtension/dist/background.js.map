{"version":3,"sources":["background.ts"],"names":[],"mappings":";AAoDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA5CM,IAAA,EA4CN,WAvCI,SAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GAJA,KAAA,UAAyB,IAAI,MAC7B,KAAA,aAA6C,KAErC,KAAA,YAAuB,EAOxB,KAAA,MAAQ,aAMR,KAAA,KAAO,aAIP,KAAA,aAAe,WAClB,EAAK,OACL,EAAK,gBAGF,KAAA,SAAW,SAAC,KAQX,KAAA,aAAe,aAIf,KAAA,cAAgB,aAM5B,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,kBAdmC,MAAA,SAAA,GACjB,MAAA,GAAA,OAAA,EAAK,WAAc,KAAA,OAAA,EAAK,aAAgB,KAAA,OAAA,EAAK,aAAgB,KAAA,OAAA,EAAK,uBAapF,EAAA,GAAI,EAAO,IAAI","file":"background.js","sourceRoot":"..\\src","sourcesContent":["import * as Listeners from './Listeners'\r\nimport { IListener } from './Shared/SharedDeclarations';\r\nimport { BrowserEvent } from './Shared/SharedDeclarations'\r\nimport { IApplicationInterface, WebSocketInterface } from './ApplicationInterface/';\r\n\r\n/**\r\n * The \"main\" class of the webextension\r\n */\r\nclass BackgroundScript {\r\n    listeners: IListener[] = new Array();\r\n    appInterface: IApplicationInterface | null = null;\r\n    static receiverURL: string;\r\n    private configured : boolean = false;\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * Start all listeners\r\n     */\r\n    public start = () => {\r\n\r\n    }\r\n    /**\r\n     * Stop all listeners\r\n     */\r\n    public stop = () => {\r\n\r\n    }\r\n\r\n    public stopAndRetry = () => {\r\n        this.stop();\r\n        this.requestStart();\r\n    }\r\n\r\n    public callback = (event : BrowserEvent) => {\r\n\r\n    }\r\n\r\n    private static timeStampString(date : Date) {\r\n        return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}:${date.getMilliseconds()}`;\r\n    }\r\n\r\n    private requestStart = () => {\r\n\r\n    }\r\n\r\n    private requestConfig = () => {\r\n\r\n    }\r\n}\r\n\r\n//entry point\r\nlet main = new BackgroundScript()"]}